"use strict";(self.webpackChunknvchad_site=self.webpackChunknvchad_site||[]).push([[784],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>g});var i=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,i,r=function(e,n){if(null==e)return{};var t,i,r={},l=Object.keys(e);for(i=0;i<l.length;i++)t=l[i],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(i=0;i<l.length;i++)t=l[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var u=i.createContext({}),c=function(e){var n=i.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=c(e.components);return i.createElement(u.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},m=i.forwardRef((function(e,n){var t=e.components,r=e.mdxType,l=e.originalType,u=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),m=c(t),g=r,d=m["".concat(u,".").concat(g)]||m[g]||s[g]||l;return t?i.createElement(d,o(o({ref:n},p),{},{components:t})):i.createElement(d,o({ref:n},p))}));function g(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var l=t.length,o=new Array(l);o[0]=m;var a={};for(var u in n)hasOwnProperty.call(n,u)&&(a[u]=n[u]);a.originalType=e,a.mdxType="string"==typeof e?e:r,o[1]=a;for(var c=2;c<l;c++)o[c]=t[c];return i.createElement.apply(null,o)}return i.createElement.apply(null,t)}m.displayName="MDXCreateElement"},7539:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>o,default:()=>s,frontMatter:()=>l,metadata:()=>a,toc:()=>c});var i=t(7462),r=(t(7294),t(3905));const l={id:"plugins",title:"Plugins"},o=void 0,a={unversionedId:"config/plugins",id:"config/plugins",title:"Plugins",description:"Plugin definition",source:"@site/docs/config/plugins.md",sourceDirName:"config",slug:"/config/plugins",permalink:"/config/plugins",tags:[],version:"current",frontMatter:{id:"plugins",title:"Plugins"},sidebar:"config",previous:{title:"Options",permalink:"/config/options"},next:{title:"Mappings",permalink:"/config/Mappings"}},u={},c=[{value:"Plugin definition",id:"plugin-definition",level:2},{value:"Install, Remove plugins &amp; Override them",id:"install-remove-plugins--override-them",level:2}],p={toc:c};function s(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,i.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"plugin-definition"},"Plugin definition"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"What is a plugin definition? Its a term we use to define plugins so packer could use & install them."),(0,r.kt)("li",{parentName:"ul"},"Our way of defining plugin is slightly different and better than packer's way"),(0,r.kt)("li",{parentName:"ul"},"Example : ")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},'  -- packer\'s original syntax\n  use {\n    "Pocco81/TrueZen.nvim",\n     cmd = "abc"\n  }\n\n  -- NvChad\'s syntax\n  ["Pocco81/TrueZen.nvim"] = {\n    cmd = "abc"\n  },\n\n  -- if you dont wish to have any plugin definition options\n  ["Pocco81/TrueZen.nvim"] = {}\n')),(0,r.kt)("h2",{id:"install-remove-plugins--override-them"},"Install, Remove plugins & Override them"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Check all packer options available for plugin definitions : ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/wbthomason/packer.nvim#specifying-plugins"},"codeblock section here"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},'-- chadrc\nM.plugins = require "custom.plugins"\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},'-- custom/plugins/init.lua\n-- we\'re basically returning a table!\nreturn {\n\n  -- Install plugin\n  ["Pocco81/TrueZen.nvim"] = {},\n\n  -- Override plugin definition options\n  ["goolord/alpha-nvim"] = {\n    disable = false,\n    cmd = "Alpha",\n  },\n\n  -- Override plugin config\n  ["williamboman/mason.nvim"] = {\n    override_options = {\n          ensure_installed = { "html-lsp", "clangd" }\n      }\n  },\n   \n   -- Override plugin config if it has a module called\n   -- If you wish to call a module, which is \'cmp\' in this case\n   ["hrsh7th/nvim-cmp"] = {\n    override_options = function()\n      local cmp = require "cmp"\n\n      return {\n        mapping = {\n          ["<C-d>"] = cmp.mapping.scroll_docs(-8),\n        },\n      }\n    end,\n  },\n\n  -- remove plugin\n  ["neovim/nvim-lspconfig"] = false\n}\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"NOTE : THe override_options will override the default plugin config's options, so you dont have to re-write the whole default plugin config but just write the things you want to change ( override )")))}s.isMDXComponent=!0}}]);